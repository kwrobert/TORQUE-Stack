#####################################################################################################
# Script: headnode.yaml
# Author: Kyle Robertson
# Date: September 18, 2015
# Company: Worlcom Exchange Inc.
# Description: A HEAT template that deploys the head node in the TORQUE PBS job schedular architecture. 
# This node runs the pbs_scheduler and pbs_server services. Users will log in here to run their jobs.
# It is a member of a load-balanced pool of autoscaling servers.   
#####################################################################################################


heat_template_version: 2014-10-16
description: Homogenous compute cluster

parameters:
  image:
    type: string
    description: Image used for servers
  key_name:
    type: string
    description: SSH key to connect to the servers
  flavor:
    type: string
    description: flavor used by the servers
  internal_network:
    type: string
    description: Network used by the server
  external_network:
    type: string
    description: Public facing external network where public IPs exist
  sec_group:
    type: string
    description: Security group for headnodes

resources:
  server:
    type: OS::Nova::Server
    properties:
      name: headnode
      flavor: {get_param: flavor}
      image: {get_param: image}
      key_name: {get_param: key_name}
      networks: [network: {get_param: internal_network}]
      security_groups: [{get_param: sec_group}]
      user_data_format: RAW
      user_data: |
        #cloud-config
        chpasswd:
          list: |
            root:stackops
            centos:stackops
          expire: False
        ssh_pwauth: True
        package-update: true
        package-upgrade: true
        packages:
          - libtool
          - openssl-devel
          - libxml2-devel
          - boost-devel
          - gcc
          - gcc-c++
          - git
          - nmap
        runcmd: 
          - IP="$(ifconfig eth0 | grep "inet" | awk '{print $2;}' | head -1)"
          - HOSTNAME="$(hostname)"
          - echo "$IP $HOSTNAME" >> /etc/hosts
          - git clone https://github.com/adaptivecomputing/torque.git -b 5.1.1 torque_5.1.1
          - cd torque_5.1.1
          - ./autogen.sh
          - ./configure
          - make
          - make install
          - cp contrib/init.d/trqauthd /etc/init.d/
          - chkconfig --add trqauthd
          - echo /usr/local/lib > /etc/ld.so.conf.d/torque.conf
          - ldconfig
          - service trqauthd start
          - echo $(hostname) >> /var/spool/torque/server_name
          - export PATH=/usr/local/bin/:/usr/local/sbin/:$PATH
          - ./torque.setup root
          - cp contrib/init.d/pbs_server /etc/init.d
          - chkconfig --add pbs_server
          - service pbs_server restart
        
  #public_port:  
  #  type: OS::Neutron::Port
  #  properties:
  #    fixed_ips: [subnet: {get_param: external_network}]
          
  floating_ip:
     type: OS::Neutron::FloatingIP
     properties:
       floating_network: {get_param: external_network}
       
  floating_ip_association:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: floating_ip }
      port_id: {get_attr: [server, addresses, {get_param: internal_network}, 0, port]}
       
outputs:
  private_headnode_ip:
    description: Private IP address of headnode
    value: {get_attr: [server, networks, {get_param: internal_network}, 0]}
  public_headnode_ip:
    description: Public IP Address of the headnode
    value: {get_attr: [floating_ip, floating_ip_address]}